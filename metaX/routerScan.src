//command: nmap
if params.len != 1 or params[0] == "-h" or params[0] == "--help" then exit("<b>Usage: metaScan [ip_address]</b>")	
if not is_valid_ip(params[0]) then exit("nmap: invalid ip address")
if not get_shell.host_computer.is_network_active then exit("nmap: can't connect. No internet access.")

metaxploit = include_lib("/lib/metaxploit.so")
if not metaxploit then
	metaxploit = include_lib(get_shell.host_computer.current_path + "/metaxploit.so")
	if not metaxploit then metaxploit = include_lib(home_dir + "/metaxploit.so")
end if
if not metaxploit then exit("Couldn't locate metaxploit. Please install (correctly).")
ipAddress = params[0]
isLanIp = is_lan_ip( ipAddress )

if isLanIp then
	router = get_router;
else 
	router = get_router( ipAddress )
end if

if router == null then exit("nmap: ip address not found")
ports = null

if not isLanIp then
	ports = router.used_ports
else
	ports = router.device_ports(ipAddress)
end if

if ports == null then exit("nmap: ip address not found")
if typeof(ports) == "string" then exit(ports)

info = "PORT STATE SERVICE VERSION LIB LAN"   
print("\nStarting nmap v1.1 at " + current_date)
print("Interesting ports on " + params[0] + "\n")
if(ports.len == 0) then exit("Scan finished. No open ports.")

libs = []

for port in ports
	net_session = metaxploit.net_use(ipAddress, port.port_number)
	if not net_session then net_session = metaxploit.net_use(ipAddress)
	if not net_session then exit("Could not establish metaxploit net session")
	metalib = net_session.dump_lib
	service_info = router.port_info(port)
	lan_ips = port.get_lan_ip
	port_status = "OPEN"
	push = true
	for lib in libs
		if lib.lib_name == metalib.lib_name and lib.version == metalib.version then push = false
	end for
	if push == true then libs.push(metalib)
	
	if(port.is_closed and not isLanIp) then
		port_status = "CLOSED"
	end if
	info = info + "\n" + port.port_number + " " + port_status + " " + service_info + " " + metalib.lib_name + " " + lan_ips
end for
print(format_columns(info) + "\n")
print
print
for metalib in libs
	print("Scanning: " + metalib.lib_name + " " + metalib.version)
	memAreas = metaxploit.scan(metalib)
	print("Vulnerable Areas: " + memAreas)
	print("----------------------------------------")
	for area in memAreas
		print("Area: " + area)
		print("Vulnerabilities:")
		print(metaxploit.scan_address(metalib, area))
	end for
	print
	print
end for
